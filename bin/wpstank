#!/usr/bin/env node

var program = require('commander')
    , WPStank = require('../src/wpstank')
    , stank = new WPStank ;

// colors
var red   = '\033[31m'
    , yellow = '\033[33m'
    , black  = '\030[0m'
    , reset  = '\033[0m'
    , b      = ' \r\n'
    , space  = '    ';

// helper functions 
var list = function( val ) {
    return val.split( ',' );
}

var error = function( msg ) { console.log( red + msg + reset ); }
var warning = function( msg ) { console.log( yellow + msg + reset ); }
var log = function( msg ) { console.log( b + space + msg + reset ); }

program
    .version('0.0.0')
    .option('-g, --generate', 'Generate a file')
    .option('-d, --destroy', 'Delete a file')
    .option('-f, --force', 'Force to overwrite a file')
    .option('-p, --post-type [type]', 'Post Type')
    .option('-s, --shortcode [type]', 'Shortcode')
    .option('-t, --taxonomy [type]', 'Taxonomy')
    .option('-c, --custom <type,name>', 'Custom template', list);

program
    .command('init')
    .description('Setup stank')
    .action(function(){
        console.log( "initializing..." );
        stank.init();
    });

program.parse( process.argv );

// The main post types
var types = [ 'postType', 'taxonomy', 'shortcode' ];

for( i = 0; i < types.length; i++ ) {
    var type = types[i];
    if( program[type] ) {
        var resource = type ,
            name = program[type] ;
        // Is a type specified?
        if( name === true ) return error( "No " + type + " was specified" );
        if( program.generate ) {
            // prompt before overwriting the file
            if( stank.exist( name, type ) && ! program.force ) {
                log('');
                warning( stank.filePath( name, type ) + " already exists." );
                log( 'Use the --force switch to overwrite the file' );
                log('');
            } else {
                stank.create( name, type );
            }
        }
        if( program.destroy ) stank.destroy( name, type ); 
    }
}

if( program.custom ) {
    if( program.custom.length < 2 ) error( "Requires at least two comma separated arguments" );
}
